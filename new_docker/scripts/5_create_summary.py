import os
import sys
from openai import OpenAI

# –ó–∞–≥—Ä—É–∑–∫–∞ API –∫–ª—é—á–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∏–∑ .env —Ñ–∞–π–ª–∞, –∫–æ—Ç–æ—Ä—ã–π –º–æ–Ω—Ç–∏—Ä—É–µ—Ç—Å—è –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
API_KEY = os.environ.get("OPENROUTER_API_KEY")

# --- –ù–ê–°–¢–†–û–ô–ö–ò ---
BASE_DATA_DIR = "/data"
# –ü–∞–ø–∫–∞, –æ—Ç–∫—É–¥–∞ –±–µ—Ä–µ–º –ø–æ–ª–Ω—ã–µ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏
FULL_TRANSCRIPT_DIR = os.path.join(BASE_DATA_DIR, "4_full_transcripts")
FULL_TRANSCRIPT_FILENAME_TEMPLATE = "{meeting_name}_full_transcript.txt"
SUMMARIES_BASE_DIR = os.path.join(BASE_DATA_DIR, "5_summaries")
SUMMARY_FILENAME_TEMPLATE = "{meeting_name}_summary.md" # –ò—Å–ø–æ–ª—å–∑—É–µ–º .md –¥–ª—è Markdown

OPENROUTER_BASE_URL = "https://openrouter.ai/api/v1"
MODEL_ID = "deepseek/deepseek-r1:free"
# --- –ö–û–ù–ï–¶ –ù–ê–°–¢–†–û–ï–ö ---

SUMMARIZE_PROMPT = """
–¢—ã ‚Äî —ç–ª–∏—Ç–Ω—ã–π –±–∏–∑–Ω–µ—Å‚Äë–∞–Ω–∞–ª–∏—Ç–∏–∫. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äì –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—é
—Å–æ–≤–µ—â–∞–Ω–∏—è –≤ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ä–µ–∑—é–º–µ (Markdown).

**–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Å—Ç–∏–ª—é –∏ —Ñ–æ—Ä–º–∞—Ç—É**
1.  –í—ã–±–µ—Ä–∏ —Ç–æ–ª—å–∫–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ.
2.  –ò—Å–ø–æ–ª—å–∑—É–π Markdown‚Äë–∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏ —Å–ø–∏—Å–∫–∏.
3.  –ù–µ –ø—Ä–∏–¥—É–º—ã–≤–∞–π —Ñ–∞–∫—Ç–æ–≤, –æ–ø–∏—Ä–∞–π—Å—è —Å—Ç—Ä–æ–≥–æ –Ω–∞ —Ç–µ–∫—Å—Ç.
4.  –ü–∏—à–∏ –ª–∞–∫–æ–Ω–∏—á–Ω–æ –∏ –ø–æ –¥–µ–ª—É.

--- –ú–µ–Ω—é —Ä–∞–∑–¥–µ–ª–æ–≤ ---
### –ò—Ç–æ–≥–∏ –≤—Å—Ç—Ä–µ—á–∏: [–ö—Ä–∞—Ç–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏]
#### üîπ –ö–ª—é—á–µ–≤—ã–µ —Ç–µ–º—ã –æ–±—Å—É–∂–¥–µ–Ω–∏—è:
- ‚Ä¶
#### üéØ –ì–ª–∞–≤–Ω—ã–µ –≤—ã–≤–æ–¥—ã –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:
- ‚Ä¶
#### ‚úÖ –ü—Ä–∏–Ω—è—Ç—ã–µ —Ä–µ—à–µ–Ω–∏—è:
- ‚Ä¶
####  actionable –ü–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ (Action Items):
- **[–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π]**: ‚Ä¶
#### ‚ö†Ô∏è –í—ã—è–≤–ª–µ–Ω–Ω—ã–µ —Ä–∏—Å–∫–∏ –∏ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∑–æ–Ω—ã:
- ‚Ä¶
#### ‚ùì –û—Ç–∫—Ä—ã—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏ —Ç–µ–º—ã –¥–ª—è –±—É–¥—É—â–∏—Ö –æ–±—Å—É–∂–¥–µ–Ω–∏–π:
- ‚Ä¶
"""

def create_summary_for_meeting(meeting_name):
    """–°–æ–∑–¥–∞–µ—Ç —Ä–µ–∑—é–º–µ –¥–ª—è —Å–æ–≤–µ—â–∞–Ω–∏—è —Å –ø–æ–º–æ—â—å—é —è–∑—ã–∫–æ–≤–æ–π –º–æ–¥–µ–ª–∏."""
    print(f"\n--- –°–æ–∑–¥–∞—é —Ä–µ–∑—é–º–µ –¥–ª—è: {meeting_name} ---")

    if not API_KEY:
        print("–û—à–∏–±–∫–∞: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è OPENROUTER_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", file=sys.stderr)
        sys.exit(1)

    client = OpenAI(base_url=OPENROUTER_BASE_URL, api_key=API_KEY)

    full_transcript_path = os.path.join(FULL_TRANSCRIPT_DIR, FULL_TRANSCRIPT_FILENAME_TEMPLATE.format(meeting_name=meeting_name))
    output_dir = os.path.join(SUMMARIES_BASE_DIR, meeting_name)
    output_filepath = os.path.join(output_dir, SUMMARY_FILENAME_TEMPLATE.format(meeting_name=meeting_name))
    os.makedirs(output_dir, exist_ok=True)

    try:
        with open(full_transcript_path, "r", encoding="utf-8") as f:
            full_text = f.read()
        if not full_text.strip():
            print("–û—à–∏–±–∫–∞: –§–∞–π–ª —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏ –ø—É—Å—Ç. –†–µ–∑—é–º–µ –Ω–µ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–æ.", file=sys.stderr)
            return
    except FileNotFoundError:
        print(f"–û—à–∏–±–∫–∞: –§–∞–π–ª —Å –ø–æ–ª–Ω–æ–π —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω: '{full_transcript_path}'", file=sys.stderr)
        return

    user_message = (
        SUMMARIZE_PROMPT.replace("[–ö—Ä–∞—Ç–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏]", meeting_name.replace("_", " ").title())
        + "\n\n---\n\n–¢–†–ê–ù–°–ö–†–ò–ü–¶–ò–Ø:\n```\n" + full_text + "\n```"
    )

    try:
        print("–û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å –º–æ–¥–µ–ª–∏ DeepSeek‚ÄëR1 (free)‚Ä¶")
        response = client.chat.completions.create(
            model=MODEL_ID,
            messages=[{"role": "user", "content": user_message}],
            temperature=0.5,
            top_p=0.9,
            stream=False
        )
        summary_text = response.choices[0].message.content

        with open(output_filepath, "w", encoding="utf-8") as f:
            f.write(summary_text)
        print(f"‚úÖ –†–µ–∑—é–º–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {output_filepath}")

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ OpenRouter / DeepSeek‚ÄëR1: {e}", file=sys.stderr)

def main():
    if len(sys.argv) != 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python3 5_create_summary.py <–∏–º—è_—Å–æ–≤–µ—â–∞–Ω–∏—è>", file=sys.stderr)
        sys.exit(1)
        
    meeting_name = sys.argv[1]
    create_summary_for_meeting(meeting_name)

if __name__ == "__main__":
    main()